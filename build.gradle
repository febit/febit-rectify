plugins {
  id 'com.github.hierynomus.license' version '0.16.1'
  id 'org.febit.standard-java' version '1.0.0-SNAPSHOT'
}

group 'org.febit.rectify'
version '1.7.0-SNAPSHOT'

ext {
  versions = [
      slf4j              : '1.7.36',
      jsr305             : '3.0.2',
      commonsLang3       : '3.12.0',
      commonsCollections4: '4.4',
      assertj            : '3.24.2',
      jackson            : '2.14.2',
      junit              : '5.9.2',
      wit                : '2.7.0-beta',
      febit              : '3.0.0-SNAPSHOT',
      calcite            : '1.34.0',
      sqlline            : '1.12.0',
      flink              : '1.17.0',
  ]
}

subprojects {

  group rootProject.group
  version rootProject.version

  apply plugin: 'java'
  apply plugin: 'com.github.hierynomus.license'

  apply from: "${rootDir}/gradle/publish-maven.gradle"

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  license {
    mapping {
      java = 'SLASHSTAR_STYLE'
    }
    include '**/*.java'
    strictCheck false
    skipExistingHeaders false
    header rootProject.file('etc/licenseheader.txt')
  }

  repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  }

  tasks.withType(Test) {
    testLogging.events = ["FAILED", "PASSED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"]
  }

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.debug = true
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
  }

  tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
  }

  dependencyManagement {
    imports {
      mavenBom "com.fasterxml.jackson:jackson-bom:${versions.jackson}"
    }
    dependencies {
      dependencySet(group: 'org.slf4j', version: "${versions.slf4j}") {
        entry 'slf4j-api'
        entry 'slf4j-simple'
      }
      dependencySet(group: 'org.apache.flink', version: "${versions.flink}") {
        entry "flink-table-common"
        entry "flink-streaming-java"
        entry "flink-clients"
      }
      dependency "com.google.code.findbugs:jsr305:${versions.jsr305}"
      dependency "org.apache.commons:commons-collections4:${versions.commonsCollections4}"
      dependency "org.apache.commons:commons-lang3:${versions.commonsLang3}"
      dependency "org.febit:febit-lang:${versions.febit}"
      dependency "org.febit.wit:wit-core:${versions.wit}"
      dependency "org.apache.avro:avro:${versions.avro}"
      dependency "org.apache.calcite:calcite-core:${versions.calcite}"
      dependency "sqlline:sqlline:${versions.sqlline}"
    }
  }

  test {
    useJUnitPlatform()
  }

  dependencies {
    compileOnly 'com.google.code.findbugs:jsr305'

    testImplementation 'org.febit:febit-lang'
    testImplementation 'org.slf4j:slf4j-api'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
    testImplementation "org.assertj:assertj-core:${versions.assertj}"
    testRuntimeOnly 'org.slf4j:slf4j-simple'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
  }
}
